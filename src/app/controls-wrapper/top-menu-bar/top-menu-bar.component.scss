@use 'sass:math';

@import 'src/app/shared/scss/mixins';

/** Spinning effect used for "button processing" status border. */
@keyframes spin {
  100% {
    transform: rotateZ(360deg);
  }
}

:host {
  @include overrideMatTextInputStyles(--backgroundColorAccent);
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.topMenuBar {
  &__row {
    &--showingSettings {
      display: flex;
      justify-content: space-between;
      padding: 0 8px;
      width: 100%;

      & .topMenuBar__buttons {
        // override default styles
        margin-left: 0;
        margin-right: 0;
      }
    }
  }

  &__buttons {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin: 10px auto 5px;
  }

  &__buttonWrapper {
    @include forceWidth(70px);
    align-items: center;
    display: flex;
    flex-direction: column;
  }

  &__button {
    $buttonSize: 40px;

    @include iconButton($buttonSize);
    margin-bottom: 2px;
    padding: 3px;
    position: relative;
    
    &:before {
      $borderWidth: 4px;
      $borderSpacing: 2px;
      $borderDimension: $buttonSize + ($borderWidth + $borderSpacing) * 2;
      $dashSpacing: 12deg;
      $totalDashes: 12;

      background: repeating-conic-gradient(
        var(--borderColorAccent) 0 calc(360deg/$totalDashes - $dashSpacing), 
        transparent 0 calc(360deg/$totalDashes));
      mask: radial-gradient(
        farthest-side,
        transparent calc(100% - $borderWidth),
        var(--backgroundColorPrimary) calc(100% - $borderWidth + 1px));
      border-radius: #{math.div($borderDimension, 2)};
      content: '';
      height: $borderDimension;
      left: #{-$borderSpacing - 1 - $borderWidth};
      opacity: 0;
      position: absolute;
      top: #{-$borderSpacing - 1 - $borderWidth};
      transition: all 0.25s ease;
      width: $borderDimension;
      z-index: -1;
    }

    &--processing {
      &:before {
        // TODO how to still spin while fading out?
        animation: spin 10s linear infinite;
        opacity: 1;
      }
    }

    &__icon {
      font-size: 25px;
    }

    &__text {
      font-size: 14px;
    }
  }

  &__settings {
    align-items: center;
    background: var(--backgroundColorPrimary);
    border-radius: 6px;
    display: flex;
    flex-direction: row-reverse;
    padding: 4px 0 0;

    &--inOverlay {
      @include overlayContainer();
      flex-direction: column;

      & .topMenuBar__slider {
        margin: 0;
        margin-bottom: 8px;
      }
    }
  }

  &__slider {
    flex-direction: row;
    margin: 8px 0 8px 6px;

    @at-root ::ng-deep &__label {
      margin: 0 !important; // override default styling
    }

    @at-root ::ng-deep &__input {
      margin: -6px 0;
    }
  }

  &__transitionInput {
    // needed for overlay view (?)
    // TODO why is nonfocused text color override not working
    @include overrideMatTextInputStyles(--backgroundColorAccent);
    margin-bottom: -20px;
    max-width: 120px;
    min-width: 120px;
  }
}
