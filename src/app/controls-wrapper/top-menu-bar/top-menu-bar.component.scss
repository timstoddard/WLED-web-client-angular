@use 'sass:math';

@import 'src/app/shared/scss/mixins';

$defaultSpacing: 5px;

/** Spinning effect used for "button processing" status border. */
@keyframes spin {
  100% {
    transform: rotateZ(360deg);
  }
}

:host {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: auto auto auto;
}

.topMenuBar {
  &__buttonsWrapper {
    display: flex;
    grid-area: 1 / 1 / 3 / 2;
    justify-content: flex-start;
    margin: 2px;
    padding: #{$defaultSpacing * 1.5};
    padding-bottom: 0;
    width: 100%;
  }

  &__moreButton {
    display: none !important;
  }

  &__deviceSelectorWrapper {
    @include flex-center;
    grid-area: 1 / 2 / 3 / 3;
    overflow: hidden;
  }

  &__settingsWrapper {
    align-items: center;
    background: var(--backgroundColorPrimary);
    border-radius: 6px;
    display: flex;
    flex-direction: row-reverse;
    grid-area: 1 / 3 / 3 / 4;
    padding: $defaultSpacing;
    padding-right: #{$defaultSpacing * 2};
  }

  &__liveViewWrapper {
    grid-area: 3 / 1 / 4 / 4;
  }

  &__liveView {
  }

  &__buttonWrapper {
    @include forceWidth(55px);
    align-items: center;
    display: flex;
    flex-direction: column;
  }

  &__button {
    $buttonSize: 40px;

    @include flex-center;
    @include iconButton($buttonSize);
    margin-bottom: 2px;
    padding: 3px;
    position: relative;
    
    &:before {
      $borderWidth: 4px;
      $borderSpacing: 2px;
      $borderDimension: $buttonSize + ($borderWidth + $borderSpacing) * 2;
      $dashSpacing: 12deg;
      $totalDashes: 12;

      background: repeating-conic-gradient(
        var(--borderColorAccent) 0 calc(360deg/$totalDashes - $dashSpacing), 
        transparent 0 calc(360deg/$totalDashes));
      mask: radial-gradient(
        farthest-side,
        transparent calc(100% - $borderWidth),
        var(--backgroundColorPrimary) calc(100% - $borderWidth + 1px));
      border-radius: #{math.div($borderDimension, 2)};
      content: '';
      height: $borderDimension;
      left: #{-$borderSpacing - 1 - $borderWidth};
      opacity: 0;
      position: absolute;
      top: #{-$borderSpacing - 1 - $borderWidth};
      transition: all 0.25s ease;
      width: $borderDimension;
      z-index: -1;
    }

    &--processing {
      &:before {
        // TODO how to still spin while fading out?
        animation: spin 10s linear infinite;
        opacity: 1;
      }
    }

    &__icon {
      font-size: 25px;
    }

    &__text {
      font-size: 14px;
      user-select: none;
    }
  }

  &__slider {
    @at-root ::ng-deep &__label {
      font-size: 14px;
    }

    @at-root ::ng-deep &__input {
      margin: -15px 0;
    }
  }

  &__transitionInputWrapper {
    align-items: center;
    display: flex;
    flex-direction: column;
    margin-right: #{$defaultSpacing * 2};
  }

  ::ng-deep &__overlayBackdrop {
    @include overlay-backdrop;
  }

  // mobile layout
  @include mobile-layout {
    &__buttonsWrapper {
      grid-area: 2 / 1 / 3 / 4;
      justify-content: space-evenly;
      margin: 2px auto;
      max-width: 500px;
      padding: #{$defaultSpacing + 2px} $defaultSpacing 3px;
      width: 100%;
    }

    &__moreButton {
      display: flex !important;
    }
    
    &__deviceSelectorWrapper {
      grid-area: 1 / 1 / 2 / 4;
    }

    &__deviceSelector {
      width: 100%;
    }

    &__settingsWrapper {
      display: none;
    }

    &__liveViewWrapper {
      grid-area: 3 / 1 / 4 / 4;
    }

    &__transitionInputWrapper {
      margin: 0;
      margin-top: 5px;
    }
  }
}
