@mixin radioButtonListItem() {
  $grandparentSelector: &;
  $boxShadowPx: 0px 0px 7px 6px;

  // background colors
  $normalBackgroundColor: rgba(var(--borderColorPrimaryRgb),0.6);
  $hoverBackgroundColor: rgba(var(--borderColorPrimaryRgb),0.8);
  $selectedBackgroundColor: rgba(var(--themeColorPrimaryRgb),0.7);

  // text colors
  $normalTextColor: var(--backgroundColorPrimary);
  $hoverTextColor: var(--backgroundColorPrimary);
  $selectedTextColor: var(--backgroundColorPrimary);

  // border colors
  $normalBorderColor: var(--borderColorAccent);
  $hoverBorderColor: var(--borderColorPrimary);
  $selectedBorderColor: var(--themeColorPrimary);

  align-items: center;
  background: var(--backgroundColorPrimary);
  border: 1px solid $normalBorderColor;
  border-bottom: 0;
  color: $selectedTextColor;
  display: flex;
  justify-content: center;
  min-height: 36px;
  transition: border-color 0.2s ease;

  &:last-of-type {
    border-bottom: 2px solid $normalBorderColor;

    &#{$grandparentSelector}--selected {
      border-bottom: 2px solid $selectedBorderColor;
    }
  }

  &--selected {
    border-color: $selectedBorderColor;
    cursor: pointer;

    & #{$grandparentSelector}__text {
      background: $selectedBackgroundColor;
      box-shadow: $boxShadowPx $selectedBackgroundColor;
      color: $selectedTextColor;
      font-weight: bold;
      text-decoration: underline;
    }

    & + #{$grandparentSelector} {
      border-top-color: $selectedBorderColor;
    }
  }

  &:hover {
    // needs !important so that hover shows up on selected items
    border-color: $hoverBorderColor !important;
    cursor: pointer;

    & #{$grandparentSelector}__text {
      background: $hoverBackgroundColor;
      box-shadow: $boxShadowPx $hoverBackgroundColor;
      color: $hoverTextColor;
      text-decoration: underline;
    }

    & + #{$grandparentSelector} {
      border-top-color: $hoverBorderColor !important;
    }
  }

  &__input {
    display: none;
  }

  &__text {
    background: $normalBackgroundColor;
    box-shadow: $boxShadowPx $normalBackgroundColor;
    color: $normalTextColor;
  }
}

@mixin cursorPointerOnHover() {
  &:hover {
    cursor: pointer;
  }
}

@mixin iconButton($buttonDimension) {
  background: var(--backgroundColorPrimary);
  border: 1px solid var(--borderColorPrimary);
  border-radius: math.div($buttonDimension, 2);
  color: var(--textColorPrimary);
  height: $buttonDimension;
  width: $buttonDimension;

  &:hover {
    background: var(--backgroundColorAccent);
  }

  &:not([disabled]) {
    @include cursorPointerOnHover();
  }

  &--enabled {
    background: var(--themeColorPrimary);
    color: var(--backgroundColorPrimary);

    &:hover {
      background: var(--themeColorAccent);
    }
  }
}

@mixin forceWidth($width) {
  max-width: $width;
  min-width: $width;
}
