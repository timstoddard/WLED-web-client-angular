@import 'src/app/shared/scss/mixins';
@import 'src/app/shared/scss/rainbow';

.textInput {
  $inputMargin: 3px;
  $inputBorderRadius: 4px;

  @include flex-center;
  border: 1px solid var(--borderColorPrimary);
  border-radius: 6px;
  cursor: pointer;
  flex-direction: column;
  margin: 6px;
  padding: 4px;

  &--valid {
    border-color: var(--themeColorPrimary);
  }

  &--invalid {
    border-color: var(--errorColorPrimary);
  }

  &__contentWrapper {
    @include flex-center;
    flex-direction: row;

    // TODO make this generic (was just for segments)
    // breakpoint under which the number inputs start to wrap
    @media screen and (max-width: 670px) {
      flex-direction: column;
    }
  }

  &__inputWrapper {
    @include flex-center;
    flex-wrap: nowrap;
  }

  &__inputList {
    @include flex-center;
    flex-wrap: nowrap;
  }

  &__label {
    font-size: 14px;
    margin: 1px 5px;

    // emphasized style when associated input is focused.
    // works when input is the direct sibling, or a descdendant of the direct sibling.
    &:has(+ .textInput__input:focus),
    &:has(+ * .textInput__input:focus) {
      text-decoration: underline;
    }
  }

  &__input {
    background: transparent;
    border: 1px solid var(--borderColorAccent);
    border-radius: 0;
    color: inherit;
    font-size: 16px;
    margin: $inputMargin 0;
    padding: 3px;

    // emphasized style for focused input
    &:focus {
      @include rainbow(border-color);
      background-color: var(--backgroundColorAccent);
      outline: 0;
    }

    // add border radius and margin to left side of first input
    &:first-of-type {
      border-bottom-left-radius: $inputBorderRadius;
      border-top-left-radius: $inputBorderRadius;
      margin-left: $inputMargin;
    }

    // add border radius and margin to right side of last input
    &:last-of-type {
      border-bottom-right-radius: $inputBorderRadius;
      border-top-right-radius: $inputBorderRadius;
      margin-right: $inputMargin;
    }

    // remove double vertical border between consecutive inputs
    &:not(:first-of-type) {
      border-left: 0;
    }

    // add left border for non-first focused input
    &:has(::ng-deep + &:focus) {
      @include rainbow(border-right-color);
    }

    &--centered {
      text-align: center;
    }
  }

  &__prefix {
    margin-left: 3px;
  }

  &__suffix {
    margin-right: 3px;
  }

  &__description {
    background: var(--backgroundColorPrimaryOffset);
    border: 1px solid var(--borderColorAccent);
    border-radius: 4px;
    font-size: 14px;
    font-style: italic;
    margin: 2px 1px 1px;
    padding: 2px 4px;
    width: 100%;
  }
}
